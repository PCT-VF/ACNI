/begin A2ML 
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             
                                                             

                                                              

  struct Protocol_Layer {                     

    uint;                                                                 
                                                                              

    uint;                                              
    uint;                                              
    uint;                                              
    uint;                                              
    uint;                                              
    uint;                                              
    uint;                                              

    uchar;                                             
    uint;                                                                       

    enum {                                                
      "BYTE_ORDER_MSB_LAST"  = 0, 
      "BYTE_ORDER_MSB_FIRST" = 1 
    }; 

    enum {                                                         
      "ADDRESS_GRANULARITY_BYTE"    = 1, 
      "ADDRESS_GRANULARITY_WORD"    = 2, 
      "ADDRESS_GRANULARITY_DWORD"   = 4 
    }; 

    taggedstruct {                                                          

      ("OPTIONAL_CMD" enum {                                                 
                                                                            

        "GET_COMM_MODE_INFO"       = 0xFB, 
        "GET_ID"                   = 0xFA, 
        "SET_REQUEST"              = 0xF9, 
        "GET_SEED"                 = 0xF8, 
        "UNLOCK"                   = 0xF7, 
        "SET_MTA"                  = 0xF6, 
        "UPLOAD"                   = 0xF5, 
        "SHORT_UPLOAD"             = 0xF4, 
        "BUILD_CHECKSUM"           = 0xF3, 
        "TRANSPORT_LAYER_CMD"      = 0xF2, 
        "USER_CMD"                 = 0xF1, 
        "DOWNLOAD"                 = 0xF0, 
        "DOWNLOAD_NEXT"            = 0xEF, 
        "DOWNLOAD_MAX"             = 0xEE, 
        "SHORT_DOWNLOAD"           = 0xED, 
        "MODIFY_BITS"              = 0xEC, 
        "SET_CAL_PAGE"             = 0xEB, 
        "GET_CAL_PAGE"             = 0xEA, 
        "GET_PAG_PROCESSOR_INFO"   = 0xE9, 
        "GET_SEGMENT_INFO"         = 0xE8, 
        "GET_PAGE_INFO"            = 0xE7, 
        "SET_SEGMENT_MODE"         = 0xE6, 
        "GET_SEGMENT_MODE"         = 0xE5, 
        "COPY_CAL_PAGE"            = 0xE4, 
        "CLEAR_DAQ_LIST"           = 0xE3, 
        "SET_DAQ_PTR"              = 0xE2, 
        "WRITE_DAQ"                = 0xE1, 
        "SET_DAQ_LIST_MODE"        = 0xE0, 
        "GET_DAQ_LIST_MODE"        = 0xDF, 
        "START_STOP_DAQ_LIST"      = 0xDE, 
        "START_STOP_SYNCH"         = 0xDD, 
        "GET_DAQ_CLOCK"            = 0xDC, 
        "READ_DAQ"                 = 0xDB, 
        "GET_DAQ_PROCESSOR_INFO"   = 0xDA, 
        "GET_DAQ_RESOLUTION_INFO"  = 0xD9, 
        "GET_DAQ_LIST_INFO"        = 0xD8, 
        "GET_DAQ_EVENT_INFO"       = 0xD7, 
        "FREE_DAQ"                 = 0xD6, 
        "ALLOC_DAQ"                = 0xD5, 
        "ALLOC_ODT"                = 0xD4, 
        "ALLOC_ODT_ENTRY"          = 0xD3, 
        "PROGRAM_START"            = 0xD2, 
        "PROGRAM_CLEAR"            = 0xD1, 
        "PROGRAM"                  = 0xD0, 
        "PROGRAM_RESET"            = 0xCF, 
        "GET_PGM_PROCESSOR_INFO"   = 0xCE, 
        "GET_SECTOR_INFO"          = 0xCD, 
        "PROGRAM_PREPARE"          = 0xCC, 
        "PROGRAM_FORMAT"           = 0xCB, 
        "PROGRAM_NEXT"             = 0xCA, 
        "PROGRAM_MAX"              = 0xC9, 
        "PROGRAM_VERIFY"           = 0xC8,
        "WRITE_DAQ_MULTIPLE"       = 0xC7
      })*;           

      "COMMUNICATION_MODE_SUPPORTED" taggedunion {                                
         "BLOCK" taggedstruct { 
            "SLAVE";                                                    
            "MASTER" struct {                                           
               uchar;               
               uchar;               
            }; 
         }; 
         "INTERLEAVED" uchar;                      
      }; 

      "SEED_AND_KEY_EXTERNAL_FUNCTION" char[256];                                      
                                                                                       
                                                                                       
      "MAX_DTO_STIM" uint;                                                                                                   
    }; 

  };

                                                              


                                                              

  struct Daq {                                                       
    enum {                                                   
      "STATIC"  = 0, 
      "DYNAMIC" = 1 
    }; 

    uint;                                             
    uint;                                                       
    uchar;                                            

    enum {                                                    
      "OPTIMISATION_TYPE_DEFAULT"            = 0, 
      "OPTIMISATION_TYPE_ODT_TYPE_16"        = 1, 
      "OPTIMISATION_TYPE_ODT_TYPE_32"        = 2, 
      "OPTIMISATION_TYPE_ODT_TYPE_64"        = 3, 
      "OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT" = 4, 
      "OPTIMISATION_TYPE_MAX_ENTRY_SIZE"     = 5 
    }; 

    enum {                                                   
      "ADDRESS_EXTENSION_FREE" = 0, 
      "ADDRESS_EXTENSION_ODT"  = 1, 
      "ADDRESS_EXTENSION_DAQ"  = 3 
    }; 


    enum {                                                      
      "IDENTIFICATION_FIELD_TYPE_ABSOLUTE"              = 0, 
      "IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE"         = 1, 
      "IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD"         = 2, 
      "IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED" = 3 
    }; 


    enum {                                                             
      "GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE"    = 1, 
      "GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD"    = 2, 
      "GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD"   = 4, 
      "GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG"   = 8 
    }; 

    uchar;                                                           

    enum {                                                        
      "NO_OVERLOAD_INDICATION"    = 0, 
      "OVERLOAD_INDICATION_PID"   = 1, 
      "OVERLOAD_INDICATION_EVENT" = 2 
    }; 

    taggedstruct {                                     
      "DAQ_ALTERNATING_SUPPORTED" uint;                                   
      "PRESCALER_SUPPORTED"; 
      "RESUME_SUPPORTED"; 
      "STORE_DAQ_SUPPORTED";

      block "STIM" struct {                                  

        enum {                                                            
          "GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE"   = 1, 
          "GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD"   = 2, 
          "GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD"  = 4, 
          "GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG"  = 8 
        }; 

        uchar;                                                        

        taggedstruct {                                            
          "BIT_STIM_SUPPORTED"; 
          "MIN_ST_STIM" uchar;                                   
                                                 
        }; 
      }; 

      block "TIMESTAMP_SUPPORTED" struct {  
        uint;                                                 
        enum {                      
          "NO_TIME_STAMP" = 0, 
          "SIZE_BYTE"     = 1, 
          "SIZE_WORD"     = 2, 
          "SIZE_DWORD"    = 4 
        }; 
        enum {                               
          "UNIT_1NS"   = 0, 
          "UNIT_10NS"  = 1, 
          "UNIT_100NS" = 2, 
          "UNIT_1US"   = 3, 
          "UNIT_10US"  = 4, 
          "UNIT_100US" = 5, 
          "UNIT_1MS"   = 6, 
          "UNIT_10MS"  = 7, 
          "UNIT_100MS" = 8, 
          "UNIT_1S"    = 9, 
          "UNIT_1PS"   = 10,
          "UNIT_10PS"  = 11,
          "UNIT_100PS" = 12
        }; 
        taggedstruct { 
          "TIMESTAMP_FIXED"; 
        }; 
      }; 

      "PID_OFF_SUPPORTED";

      "MAX_DAQ_TOTAL" uint;
      "MAX_ODT_TOTAL" uint;
      "MAX_ODT_DAQ_TOTAL" uint;
      "MAX_ODT_STIM_TOTAL" uint;
      "MAX_ODT_ENTRIES_TOTAL" uint;
	  "MAX_ODT_ENTRIES_DAQ_TOTAL" uint;
      "MAX_ODT_ENTRIES_STIM_TOTAL" uint;


      "CPU_LOAD_MAX_TOTAL" float;

      block "DAQ_MEMORY_CONSUMPTION" struct {
        ulong;                                            
        uint;                                                         
        uint;                                                   
        uint;                                                              
        uint;                                                                                                    
        uint;                                                                                                       
      };

                                                                             

      (block "DAQ_LIST" struct {                                            
                                                                            
        uint;                                                               
        taggedstruct {                                           
          "DAQ_LIST_TYPE" enum {               
            "DAQ"      = 1,                                              
            "STIM"     = 2,                                              
            "DAQ_STIM" = 3                                               
                                                                         
          }; 

          "MAX_ODT"         uchar;                              
          "MAX_ODT_ENTRIES" uchar;                              

          "FIRST_PID" uchar;                                                
          "EVENT_FIXED" uint;                                               
                                                                            
          block "PREDEFINED" taggedstruct {                                 
                                                                            
             (block "ODT" struct { 
                     uchar;                                    
                     taggedstruct { 
                         ("ODT_ENTRY" struct { 
                                     uchar;                                     
                                     ulong;                                            
                                     uchar;                                      
                                     uchar;                                             
                                     uchar;                                             
                           })*; 
                     };                        
              })*;                  
           };                         
        }; 

      })*;

                                                                          

                                                                          

      (block "EVENT" struct {                                       
                                                                    
        char[101];                                                       
        char[9];                                                         
        uint;                                                            

        enum { 
          "DAQ"      = 1,                                              
                                                                       
          "STIM"     = 2,                                              
                                                                       
          "DAQ_STIM" = 3                                               
        }; 

        uchar;                                               
        uchar;                                                          
        uchar;                                                          
        uchar;                                                         
          taggedstruct {               

            "COMPLEMENTARY_BYPASS_EVENT_CHANNEL_NUMBER" uint;
            "CONSISTENCY" enum {

                 "DAQ" = 0,
                 "EVENT" = 1
            };

            block "MIN_CYCLE_TIME" struct {                                         
             uchar;                                                          
             uchar;                                                          
            };

           "CPU_LOAD_MAX" float;

           block "CPU_LOAD_CONSUMPTION_DAQ" struct {
            float;                 
            float;                 
            float;                        
            taggedstruct { 
              (block "ODT_ENTRY_SIZE_FACTOR_TABLE" struct{                
                     uint;          
                     float;                  
               })*;
             };
           };

           block "CPU_LOAD_CONSUMPTION_STIM" struct {
            float;                 
            float;                 
            float;                        
            taggedstruct { 
              (block "ODT_ENTRY_SIZE_FACTOR_TABLE" struct{                
                     uint;          
                     float;                 
               })*;
             };
           };

           block "CPU_LOAD_CONSUMPTION_QUEUE" struct {
              float;                  
              float;                                              
           };        
         };
      })*;

                                                                

    };                              

  }; 

                                                               


                                                              

  taggedunion Daq_Event {                              
     "FIXED_EVENT_LIST" taggedstruct { 
        ("EVENT" uint)* ; 
     }; 
     "VARIABLE" taggedstruct { 
        block "AVAILABLE_EVENT_LIST" taggedstruct { 
           ("EVENT" uint)*; 
        }; 
        block "DEFAULT_EVENT_LIST" taggedstruct { 
           ("EVENT" uint)*; 
        }; 
     }; 
  }; 

                                                              


                                                              

  struct Pag {                                                 
    uchar;                                         
    taggedstruct {                             
      "FREEZE_SUPPORTED"; 
    }; 

  }; 

                                                              


                                                              

  struct Pgm {                                                 

    enum { 
      "PGM_MODE_ABSOLUTE"                = 1, 
      "PGM_MODE_FUNCTIONAL"              = 2, 
      "PGM_MODE_ABSOLUTE_AND_FUNCTIONAL" = 3 
    }; 
    uchar;                                                 
    uchar;                                                 

    taggedstruct {                                                     
      (block "SECTOR" struct {                                         
                                                                       
        char[101];                                                     
        uchar;                                                         
        ulong;                                                         
        ulong;                                                         
        uchar;                                                         
        uchar;                                                         
        uchar;                                                         
      })*;                     

      "COMMUNICATION_MODE_SUPPORTED" taggedunion {                                
         "BLOCK" taggedstruct { 
            "SLAVE";                                                    
            "MASTER" struct {                                           
               uchar;                   
               uchar;                   
            }; 
         }; 
       "INTERLEAVED" uchar;                          
       }; 
    }; 
  }; 

                                                              


                                                              

  struct Segment {                                       
    uchar;                                                        
    uchar;                                                        
    uchar;                                                        
    uchar;                                                        
    uchar;                                                        

    taggedstruct {                                                
      block "CHECKSUM" struct { 
        enum {                                                    
          "XCP_ADD_11"       =   1, 
          "XCP_ADD_12"       =   2, 
          "XCP_ADD_14"       =   3, 
          "XCP_ADD_22"       =   4, 
          "XCP_ADD_24"       =   5, 
          "XCP_ADD_44"       =   6, 
          "XCP_CRC_16"       =   7, 
          "XCP_CRC_16_CITT"  =   8, 
          "XCP_CRC_32"       =   9, 
          "XCP_USER_DEFINED" = 255 
        }; 

        taggedstruct { 
          "MAX_BLOCK_SIZE"              ulong ;                                        
                                                                                       
          "EXTERNAL_FUNCTION" char[256];                                               
                                                                                       
                                                                                       
        }; 
      }; 

      (block "PAGE" struct {                                            
                                                                        
        uchar;                                                          

        enum {                                  
            "ECU_ACCESS_NOT_ALLOWED"      = 0, 
            "ECU_ACCESS_WITHOUT_XCP_ONLY" = 1, 
            "ECU_ACCESS_WITH_XCP_ONLY"    = 2, 
            "ECU_ACCESS_DONT_CARE"        = 3 
         }; 

        enum {                                  
            "XCP_READ_ACCESS_NOT_ALLOWED"      = 0, 
            "XCP_READ_ACCESS_WITHOUT_ECU_ONLY" = 1, 
            "XCP_READ_ACCESS_WITH_ECU_ONLY"    = 2, 
            "XCP_READ_ACCESS_DONT_CARE"        = 3 
         }; 

        enum {                                  
            "XCP_WRITE_ACCESS_NOT_ALLOWED"      = 0, 
            "XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY" = 1, 
            "XCP_WRITE_ACCESS_WITH_ECU_ONLY"    = 2, 
            "XCP_WRITE_ACCESS_DONT_CARE"        = 3 
        }; 
        taggedstruct { 
          "INIT_SEGMENT" uchar;                                                     
        }; 

      })*;                                   

      (block "ADDRESS_MAPPING" struct {                            
                           ulong;                                  
                           ulong;                                  
                           ulong;                                  
      })*; 

      "PGM_VERIFY" ulong;                                  
    };                       

  }; 

                                                              


                                                              

  taggedstruct Common_Parameters {  

    block "PROTOCOL_LAYER" struct Protocol_Layer; 

    block "SEGMENT" struct Segment; 

    block "DAQ" struct Daq; 
    block "PAG" struct Pag; 
    block "PGM" struct Pgm; 

    block "DAQ_EVENT" taggedunion Daq_Event; 

  }; 

                                                             

                                                             

  struct CAN_Parameters {                
    uint;                         
                                   
    taggedstruct {               
      "CAN_ID_BROADCAST" ulong;                            
                                                      
                                                                   
      "CAN_ID_MASTER" ulong;                         
                                                     
                                                                   
      "CAN_ID_MASTER_INCREMENTAL";                                        
                                                   
                                                                                 
      "CAN_ID_SLAVE" ulong;                                     
                                                     
                                                                   
      "BAUDRATE" ulong;                            
      "SAMPLE_POINT" uchar;                       
                                                           
      "SAMPLE_RATE" enum {
        "SINGLE" = 1,                                 
        "TRIPLE" = 3                                   
      };
      "BTL_CYCLES" uchar;                       
                                                          
      "SJW" uchar;                                          
                                                  
      "SYNC_EDGE" enum {
        "SINGLE" = 1,                                     
        "DUAL" = 2                                              
      };
      "MAX_DLC_REQUIRED";                                   
                                                                      

      (block "DAQ_LIST_CAN_ID" struct {                     
        uint;                                                     
        taggedstruct {                              
                                                              
          "VARIABLE";
          "FIXED" ulong;                                  
                                                    
        };
      })*;
      (block "EVENT_CAN_ID_LIST" struct {                      
        uint;                                                  
        taggedstruct {                              
          ("FIXED" ulong)*;                                          
        };
      })*;

      "MAX_BUS_LOAD"  ulong;                               
                                                        

      block "CAN_FD" struct {
        taggedstruct {

          "MAX_DLC" uint;                                      
          "CAN_FD_DATA_TRANSFER_BAUDRATE" ulong;                    

          "SAMPLE_POINT" uchar;                             
                                                                 

          "BTL_CYCLES" uchar;                                   
                                                                 
          "SJW" uchar;                                          
                                                                 
          "SYNC_EDGE" enum {
                       "SINGLE" = 1,                           
                       "DUAL"   = 2                                 
                     };

          "MAX_DLC_REQUIRED";                                  
                                                                      

          "SECONDARY_SAMPLE_POINT" uchar;                         
                                                                
          "TRANSCEIVER_DELAY_COMPENSATION" enum {
                         "OFF" = 0,
                         "ON" = 1
          };

        };

      };

    };

  };

                                                             

                                                             

  struct TCP_IP_Parameters {

     uint;                            
                                    
     uint;           

     taggedunion {
       "HOST_NAME" char[256];
       "ADDRESS" char[15];
       "IPV6" char[39];
     };
     taggedstruct{
       "MAX_BUS_LOAD"  ulong;                            
				                          
       "MAX_BIT_RATE"  ulong;                              
                                                                    

     };

  };

                                                             

                                                             

  struct UDP_IP_Parameters {

     uint;                            
                                    
     uint;           

     taggedunion {
       "HOST_NAME" char[256];
       "ADDRESS" char[15];
       "IPV6" char[39];
     };
     taggedstruct{
       "MAX_BUS_LOAD"  ulong;                            
				                          
       "MAX_BIT_RATE"  ulong;                              
                                                                    

     };

  };

                                                             

                                                             

  enum packet_assignment_type {
               "NOT_ALLOWED",
               "FIXED",
               "VARIABLE_INITIALISED",
               "VARIABLE"
               };                                    

  struct buffer {

    uchar;               

    taggedstruct {

      "MAX_FLX_LEN_BUF" taggedunion {
               "FIXED" uchar;                        
               "VARIABLE" uchar;                    
               };                             

      block "LPDU_ID" taggedstruct {

        "FLX_SLOT_ID" taggedunion {
               "FIXED" uint;
               "VARIABLE" taggedstruct{
                   "INITIAL_VALUE" uint;
                   };
               };                         

        "OFFSET" taggedunion {
               "FIXED" uchar;
               "VARIABLE" taggedstruct{
                   "INITIAL_VALUE" uchar;
                   };
               };                    

        "CYCLE_REPETITION" taggedunion {
               "FIXED" uchar;
               "VARIABLE" taggedstruct{
                   "INITIAL_VALUE" uchar;
                   };
               };                              

        "CHANNEL" taggedunion {
               "FIXED" enum {
                        "A" = 0,
                        "B" = 1
                       };
               "VARIABLE" taggedstruct{
                   "INITIAL_VALUE" enum {
                                    "A" = 0,
                                    "B" = 1
                                   };
                   };
               };                     

         };                     

      block "XCP_PACKET" taggedstruct {

        "CMD" enum packet_assignment_type;                                   
        "RES_ERR" enum packet_assignment_type;                      
        "EV_SERV" enum packet_assignment_type;                       
        "DAQ" enum packet_assignment_type;                                     
        "STIM" enum packet_assignment_type;                                    

         };                        
    }; 

  };                    

  struct FLX_Parameters {

      uint;                                                           
                                                                    

      uint;                                           

      char[256];                                                               
                                                                 
                                                       

      char[256];                                     

      uchar;                                  

      enum { 
        "HEADER_NAX"               = 0,
        "HEADER_NAX_FILL"          = 1,
        "HEADER_NAX_CTR"           = 2,
        "HEADER_NAX_FILL3"         = 3,
        "HEADER_NAX_CTR_FILL2"     = 4,
        "HEADER_NAX_LEN"           = 5,
        "HEADER_NAX_CTR_LEN"       = 6,
        "HEADER_NAX_FILL2_LEN"     = 7,
        "HEADER_NAX_CTR_FILL_LEN"  = 8
      };


      enum { 
        "PACKET_ALIGNMENT_8"  = 0,
        "PACKET_ALIGNMENT_16" = 1,
        "PACKET_ALIGNMENT_32" = 2
      };

      taggedunion {
        block "INITIAL_CMD_BUFFER" struct buffer;
      };

      taggedunion {    
        block "INITIAL_RES_ERR_BUFFER" struct buffer;
      };

      taggedstruct {

        (block "POOL_BUFFER" struct buffer)*;

      };

  };

                                                             


    block "IF_DATA" taggedunion if_data {
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             

"ASAP1B_Bypass" taggedstruct {

  block "TP_BLOB" struct {
    uint;                                                                    
                                                                             
    uint;                                                                    
                                                                             
                                                                             
    taggedstruct {
      "BYPASS_CONFIGURATION" struct {
        uint;                                                                
                                                                             
                                                                             
                                                                             
                                                                             
        taggedstruct {
          "FAR_ADDRESS" struct {
            ulong;                                                           
                                                                             
            ulong;                                                           
                                                                             
          };
          "ADDRESS_MAPPING" enum {
                                                                             
                                                                             
            "Mask16Bit" =0,
            "DPP0"      =1,
            "DPP1"      =2,
            "DPP2"      =3,
            "DPP3"      =4
          };
          "SOFTWARE_REVISION" struct {
                                                                                                                     
                                                                                                                     
                                                                                                                     
            ulong;                                                           
                                                                             
            char[256];                                                       
                                                                             
          };
        };
      };
    };
  };

  block "KP_BLOB" struct {
    taggedstruct {

      "BUFFER_OFFSET"    char[256];                                          
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             

      "SOURCE_ID"        char[256];                                          
                                                                             

      "BIT_OFFSET"       char[256];                                          
                                                                             

      "POSSIBLE_SOURCES" ( uint )*;                                          
                                                                             
                                                                             
                                                                             
                                                                             
                                                                             
    };
  };

}; 
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                    

 "ETK_XETK" struct
  {
    taggedstruct
    {
      block "ETK_XETK_LIST" struct
      {
                                                 
        enum
        {
          "ETK_XETK_AML_VERSION_2_3_0" = 0x020300
        };

        taggedstruct
        {
          "PROJECT_IDENTIFICATION" char[256];

                                                                                        
                                                                                        
                                                                                        
                                                                                        
                                                                                        
          (block "ETK"  struct
          {
            ulong;                                                                      
            enum                                                                        
            {                                                                           
              "INTERFACE_SPEED_8MBIT"   = 1,
              "INTERFACE_SPEED_100MBIT" = 2
            };

            taggedstruct
            {
              "ETK_CFG" (uchar)*;                                                        

              ("CONFIG" struct
              {
                char[256];                                                               
                char[256];                                                               
              })*;

              "RESET_CFG" ulong;                                                         
              "DISPLAY_NAME" char[256];                       
            };
          })*;

          (block "XETK" struct
          {
            ulong;                                                                       
            taggedstruct
            {
              ("CONFIG" struct
              {
                char[256];                                                               
                char[256];                                                               
              })*;
              "DISPLAY_NAME" char[256];                       
            };
          })*;

          (block "FETK" struct
          {
            ulong;                                                                            
            taggedstruct
            {
              ("CONFIG" struct
              {
                char[256];                                                               
                char[256];                                                               
              })*;
              "DISPLAY_NAME" char[256];                       
            };
          })*;

          block "RASTER_CHECK" struct
          {
            taggedstruct
            {
              "OFFLINE_DEVICE" ulong;                                                                         
            };
            enum                                      
            {
              "ONLINE_RESPECT_OFFLINE_LIMIT" = 1,
              "ONLINE_USE_CONNECTED_DEVICE_ONLY" = 2
            };
          };
        };
      };

                                                                                  
                                                                                  
                                                                                  
                                                                                  

      ("ADDRESS_MAPPING" struct
      {
        ulong;                                                   
        ulong;                                                   
        ulong;                                                   
        taggedstruct
        {
          "ETK_XETK_REF" (ulong)*;                               
        };
      })*;

                                                                                
                                                                                
                                                                                
                                                                                
      (block "ETK_XETK_ACCESS" struct
      {
        taggedunion
        {
          "NOT_RELEVANT_FOR_ETK_XETK";                                                       
          "ETK_XETK_EMULATION_MEMORY";                                                       
          "SERIAL_INTERFACE" struct                                                          
          {
            taggedstruct
            {
              "PHYSICAL_ADDRESS" ulong;
            };
          };
        };
        taggedstruct
        {
          "ETK_XETK_REF" (ulong)*;                               
        };
      })*;

                                                                                    
      "WRITE_AT_DATA_UPDATE" struct
      {
        enum
        {
          "USE_FILE" = 0,
          "USE_ECU_FLASH" = 1,
          "ERASE" = 2
        };
      };                                                                
      "ETK_XETK_REF" (ulong)*;                                      

                                           
      (block "TRACE_WINDOW" struct
      {
        ulong;                                                            
        ulong;                                                            
        taggedstruct
        {
            "PHYSICAL_ADDRESS" ulong;
        };
        taggedstruct {
          ("CONFIG" struct
          {
            char[256];                                                    
            char[256];                                                    
          })*;
        };
        taggedstruct
        {
           "ETK_XETK_REF" (ulong)*;                               
        };
      })*;


      "DEFAULT_RASTERS" (ulong)*;                                               
                                                                                

      block "TP_BLOB" struct
      {
        enum                                   
        {
          "BYTE_ORDER_MSB_FIRST" = 1,
          "BYTE_ORDER_MSB_LAST" = 2
        };

        taggedstruct {
          block "DISTAB_CFG" struct
          {
            uint;                                                   
            taggedstruct
            {
              "DISTAB_12_DAT_MOD" enum
              {
                "DAT_MOD_BYTE" = 1,
                "DAT_MOD_WORD" = 2
              };
            };
            taggedstruct
            {
              "DISTAB_COLLECTION_VERSION" enum
              {                                                                         
                "STANDARD" = 0,                                                         
                "ACCUMULATED_VERSION_1" = 1                                             
              };
            };
          };

          (block "ECU_EVENT_LIST" struct
          {
            ulong;                                             
            taggedstruct
            {
              "ETK_XETK_REF" (ulong)*;
            };
          })*;

          "TABLE_ALIGNMENT" enum {                                              
            "ALIGNMENT_2_BYTE" = 2,
            "ALIGNMENT_4_BYTE" = 4,
            "ALIGNMENT_8_BYTE" = 8,
            "ALIGNMENT_16_BYTE" = 16
          };

          (block "EVENT_CONFIG_OUTPUT_AREA" struct
          {
            ulong; 
            ulong;                                         
            ulong; 
            ulong;                                         
            taggedstruct
            {
              "ETK_XETK_REF" (ulong)*;                                         
            };
          })*;

          (block "DATA_ACQUISITION" struct
          {
            taggedstruct
            {
              ("PRIORITY_RANGE" struct
              {
                ulong;                      
                ulong;                     
              })*;
              "ETK_XETK_REF" (ulong)*;                                         
            };
          })*;

          (block "ECU_PROPERTY" struct {
            taggedstruct
            {
              "OVERALL_PERFORMANCE" struct
              {
                ulong;                                         
                ulong;                                         
              };
              ("CORE_PERFORMANCE" struct
              {
                ulong;                                     
                ulong;                                     
                ulong;                                     
              })*;
              "ETK_XETK_REF" (ulong)*;                              
            };
          })*;

                                                                 
          (block "TRIGGER_CFG" struct
          {
            taggedstruct
            {
              ("TRIGGER" struct
              {
                ulong;                                                         
                taggedunion {                             
                  "DIRECT";
                  "INDIRECT";
                };
                taggedstruct {
                  "ECU_ID" struct {
                    uint;                                                                  
                  };
                };
              })*;
              "ETK_XETK_REF" (ulong)*;                                         
            };
          })*;

          block "TIMER_CFG" struct
          {
                                                            

            taggedstruct
            {
              ("TIMER" struct {
                uint;                                                               
                ulong;                                                              
              })*;
            };
          };

          (block "TRACE_TRIGGER_CFG" struct
          {
            taggedstruct
            {
              ("TRACE_TRIGGER" struct
              {
                                                                                                        
                uint;                                                                                   
                ulong;                                                                                  
                taggedstruct
                {
                  ("CONFIG" struct
                  {
                    char[256];                                                    
                    char[256];                                                    
                  })*;
                };
                taggedstruct {
                    "ECU_ID" struct {
                    uint;                                                                                          
                  };
                };
              })*;
              "ETK_XETK_REF" (ulong)*;                                            
            };
          })*;

          (block "RESERVED_MEMORY" struct
          {
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    

            ulong;                                                                  
            ulong;                                                                  
            enum {                                                                  
              "INTERN"  = 0,
              "EXTERN"  = 1
            };
            enum {                                                                  
              "MEASUREMENT" = 0,
              "BYPASS"    = 1
            };
            enum {                                                                  
              "CHECKSUM_EXCLUDE_ONLY" = 0,
              "ECU_DISTAB_INPUT"      = 1,
              "ECU_DISTAB_OUTPUT"     = 2,
              "ECU_DISTAB_INOUT"      = 3
            };
            taggedstruct
            {
              "ETK_XETK_REF" (ulong)*;                                              
            };
          })*;

          (block "MAILBOX" struct
          {
                                                                                    
                                                                                    
                                                                                    

            ulong;                                                                     
                                                                                       
            enum {                                                                     
                                                                                       
                                                                                       
                                                                                       
              "CODE"  = 1,
              "DATA"  = 2,
              "RAM" = 3
            };
            ulong;                                                                       
                                                                                         
            ulong;                                                                       
                                                                                         
            enum {                                                                       
                                                                                         
                                                                                         
              "CODE"  = 1,
              "DATA"  = 2,
              "RAM" = 3
            };
            ulong;                                                                       
                                                                                         
            ulong;                                                                       
                                                                                         
            ulong;                                                                       

            enum {                                                                       
              "MB_VERSION_1_0" = 0x100
            };
            taggedstruct {                                                      
              "ETK_XETK_REF" (ulong)*;                                          
            };
          })*;

          block "TRIGGER_SEGMENT_BASE" struct
          {
            ulong;                                                      
            taggedstruct
            {
              "ETK_XETK_REF" (ulong)*;                                  
            };
          };

          block "CODE_CHK" struct {
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    
                                                                                    

            ulong;                                                                  
                                                                                    
                                                                                    
            ulong;                                                                  
                                                                                    
                                                                                    
            uint;                                                                   
                                                                                    
                                                                                    
            taggedstruct
            {
              "PATTERN_REFRESH_TIMEOUT" struct
              {
                uint;                                                               
              };
            };
                                                                                    

            taggedstruct
            {
                "ERROR_BEHAVIOR" enum {                                             
                "PERMANENT_RESET" = 0,                                              
                "NO_RESET"        = 1
              };

              "ETK_XETK_REF" (ulong)*;                                              
            };
          };

          (block "PRESENCE_PATTERN" struct
          {
            ulong;                                                          
            taggedstruct
            {
              "PATTERN" (uchar)*;                                           
              "ETK_XETK_REF" (ulong)*;                                      
            };
          })*;

          block "COLDSTART_HANDSHAKE" struct
          {
            ulong;                                                                
                                                                                  
            taggedstruct {
              "WAIT" (uchar)*;                                                    

              "READY" (uchar)*;                                                   

              "ETK_XETK_REF" (ulong)*;                                            
            };
          };

          block "PAGE_SWITCH_METHOD" struct
          {
            ulong;                                                                  
            taggedstruct {
              "MAILBOX" struct {
                ulong;                                                              
                ulong;                                                              
                                                                                    
                ulong;                                                              
              };

              "AUTOSTART_BEHAVIOR" enum {
                "LAST_ACTIVE_PAGE" = 0,                                           
                                                                                  
                "ALWAYS_WP"        = 1,                                           
                                                                                  
                "ALWAYS_RP"        = 2                                            
                                                                                  
              };

              "OCT_WORKINGPAGE" struct {
                ulong;                                                            
                ulong;                                                            
                ulong;                                                            
              };

              "OCT_REFERENCEPAGE" struct {
                ulong;                                                            
                ulong;                                                            
                ulong;                                                            
              };

              "OMD" struct {
                ulong;                                                                                     
                ulong;                                                                                     
                ulong;                                                                                     
                ulong;                                                                                     
                ulong;                                                                                     
                                                                                                           
              };

              "CODE_CHK_PATTERN_WP" struct {
                ulong;                                                                         
              };

              "ETK_XETK_REF" (ulong)*;                              
            };
          };

          block "ECU_DEFINED_ERRORCODES" struct
          {
            taggedstruct {
              ("ERROR_ENTRY" struct {
              ulong;                                                                                 
              char[256];                                                                             
              })*;
            };
          };


          block "CAL_WAKEUP" taggedstruct
          {
            "CAL_WAKEUP_PIN" ulong;                                             
            "CAL_TOOL_PRESENT" struct {
              ulong;                                                                            
              ulong;                                                                            
              ulong;                                                                            
            };
            "ETK_XETK_REF" (ulong)*;
          };

          (block "DATA_FREEZE" taggedstruct
          {
            ("CONFIG" struct {
              char[256];                                             
              char[256];                                             
            })*;
            "ETK_XETK_REF" (ulong)*;
          })*;

        };
      };

      (block "SOURCE" struct
      {
                                                                                  

        struct
        {
          char [100];                                                             
          int;                                                                    
                                                                                  
          long;                                                                   
        };
        taggedstruct
        {
          block "QP_BLOB" struct
          {
            uint;                                                                                   
            uint;                                                                                   
            ulong;                                                                                                    
            taggedstruct {
              (block "ETK_XETK_SPECIFIC" struct
              {
                taggedunion {                                                                       
                  "TRG_NBR" struct
                  {
                    uint;                                                                           
                  };
                  "TIMER_REF" struct
                  {
                    uint;                                                                           
                  };
                  "TRACE_TRIGGER_REF" struct
                  {
                    uint;                                                                           
                  };
                  "STIM_EVENT" struct
                  {
                    uint;                                                                       
                  };
                  "START_MEASUREMENT_EVENT" struct
                  {
                    uint;                
                  };

                };
                taggedstruct {                                                                 
                  "DIRECT";
                  "INDIRECT" struct{
                    ulong;                                                                     
                  };
                };

                taggedstruct {
                    ("CONFIG" struct {
                        char[256];                                      
                        char[256];                                  
                    })*;
                };

                taggedstruct
                {                                        
                  block "ACCUMULATION_MODE" struct
                  {
                    uint;                                                   
                                                                            
                    taggedstruct
                    {
                                                                                          
                                                                                          
                                                                                          
                      ("DATA_TYPE_RESTRICTION" enum
                      {
                        "NO_BYTES"   = 1,                                
                        "NO_2BYTES"  = 2,                                
                        "NO_4BYTES"  = 3,                                
                        "NO_8BYTES"  = 4                                 
                      })*;

                                                                      
                      "SUB_SAMPLE_BUFFER_ALIGNMENT" enum
                      {
                        "_2BYTES" = 1,               
                        "_4BYTES" = 2,               
                        "_8BYTES" = 3                
                      };
                    };
                  };
                };

                taggedstruct {
                  block "DISTAB_LAYOUT" struct {
                    ulong;                                                                         
                                                                                                   
                    uint;                                                                          
                                                                                                   
                    ulong;                                                                         
                                                                                                   
                    uint;                                                                          
                                                                                                   
                  };

                  block "BYPASS_LAYOUT" struct {
                    ulong;                                                                     
                                                                                               
                    ulong;                                                                     
                                                                                               
                  };

                                                                                             

                  "RESERVED_RASTER_DISTAB_SETUP_XETK";                                       
                                                                                             
                                                                                             
                  "RESERVED_RASTER_DISTAB_IGNORE_XETK";                                      
                                                                                             
                                                                                             
                                                                                             
                };

                taggedstruct {
                  block "ECU_PROPERTY" struct {
                    taggedstruct {
                      "PERFORMANCE" struct
                      {
                        ulong;                                     
                        ulong;                                     
                        ulong;                                     
                      };
                      "NOT_ALLOWED_8_BITS";                                                     
                      "NOT_ALLOWED_16_BITS";                                                    
                      "NOT_ALLOWED_32_BITS";                                                    
                      "NOT_ALLOWED_64_BITS";                                                    
                    };
                  };
                };

                taggedstruct {
                  "ETK_XETK_REF" (ulong)*;                                                     
                };

              })*;
            };
          };
        };
      })*;
    };
  };

"SERVICE_BASED_BYPASS" struct {

    taggedstruct {
        block "SERVICES" struct {
            enum {                                
                "SERVICE_AML_VERSION_3_1_1" = 30101
            };
            uchar;                                                                                                                 
                                                                   
                                                               
                                                                                
                                                                                                      
            uint;                                                           
            char[256];                                                   
                                                                                                     
                                                                                             
            char[256];                                                                                                             
                                                                                                  
            char[256];                                                                                                                                     
                                                                                                  
            char[256];                                                                                                                                       
                                                                                                  
            enum {                                                                                              
                "DOUBLE_BUFFERING_NOT_USED" = 0x0,
                "DOUBLE_BUFFERING_USED" = 0x1                                                       
            };
            char[256];                                                       
                                                                                                                                 
                                                                                             
            taggedstruct {
                block "IMPLEMENTED_SBB_VERSIONS" taggedstruct  {
                                                                                                                                      
                    "SBB_V2_0";                                  
                    "SBB_V2_1";                               
                    "SBB_V3_0";                                  
                    "SBB_V3_1";                               
                };
            };

            taggedstruct {
                "RESOURCE_IDS_SERVICE_POINT" char[256];                                                            
            };                                                                                       
                                                                                                                                            
                                                                                                                                  

            taggedstruct {                                                 
                (block "SERVICE_POINT" struct {
                    int;                                                                                    
                    char[256];                                                          
                    taggedstruct {
                        "PRIORITY" uint;                                                                                                                                                                                                                                                                                                 
                        "SP_CLUSTER" uint;                                                                                                                                                                                                                                                                                                                                                          
                                                                                    
                                                                                           
                        "SP_CLUSTER_GROUP" uint;                                                                                                                                                                                                                                                                                                      
                                                                                    
                                                                                           
                        "HOOKED";                                                                                                            
                                                                                                            
                    };
                })*;
            };

            taggedstruct {                                                                                                                           
                "SBB_DYNAMIC_STRUCTURE" struct {								
                    uint;                                                                                                  
                                                                                   
                                                                                
                    ulong;                                                                                                                                                                     
                    ulong;                                                                           
                    ulong;                                                                                                                                                               
                    ulong;                                                                                                

                                                                           
                    taggedunion {
                                                                                             
                        block "TRIGGER_COMBINED_WITH_CHANNEL" taggedstruct {
                            (block "TRIGGER_ETK" struct {
                                uint;                                                                  
                                uint;                                                                                  
                                taggedunion {                             
                                    "DIRECT";
                                    "INDIRECT";
                                };
                                taggedstruct {
                                  "ETK_XETK_REF" (ulong)*;                                                             
                                };
                            })*;
                        };

                                                                                                                   
                        block "TRIGGER_SEPARATED_FROM_CHANNEL" taggedstruct {
                            (block "TRIGGER_CFG" struct {
                                taggedstruct {
                                    ("TRIGGER" struct {
                                        ulong;                                                                 
                                        taggedunion {                             
                                            "DIRECT";
                                            "INDIRECT";
                                        };
                                        taggedstruct {
                                            "ECU_ID" struct {
                                                uint;                                                                                        
                                            };
                                        };
                                    })*;
                                    "ETK_XETK_REF" (ulong)*;                                                                      
                                };
                            })*;

                                                                                                    
                            (block "DATA_ACQUISITION" struct {
                                taggedstruct {
                                    ("PRIORITY_RANGE" struct {
                                        ulong;                                                               
                                        ulong;                                                               
                                                                                                             
                                    })*;
                                    "ETK_XETK_REF" (ulong)*;                                                                      
                                };
                            })*;
                        };
                    };
                };
            };
        };
    };
};

                                                                              

  "XCPplus" struct {
    uint;
    taggedstruct Common_Parameters ;                         

    taggedstruct {                                           
                                                             

      (block "XCP_ON_CAN" struct {

        struct CAN_Parameters ;                                              
        taggedstruct Common_Parameters;                                      
        taggedstruct {
          "TRANSPORT_LAYER_INSTANCE" char[101];
        };   

      })*;

      (block "XCP_ON_TCP_IP" struct {

        struct TCP_IP_Parameters ;                                           
        taggedstruct Common_Parameters;                                      
        taggedstruct {
          "TRANSPORT_LAYER_INSTANCE" char[101];
        };

      })*;

      (block "XCP_ON_UDP_IP" struct {

        struct UDP_IP_Parameters ;                                           
        taggedstruct Common_Parameters;                    